Given an integer array A containing N integers.

You need to divide the array A into two subsets S1 and S2 such that the absolute difference between their sums is minimum.

Find and return this minimum possible absolute difference.


lass Solution:
    # @param A : list of integers
    # @return an integer
    def solve(self, A):
        B=sum(A)
        n=len(A)
        dp = [[False for x in range(B+1)] for y in range(n+1)] #create a 2d  matrirx
        for i in range(n+1):
            for j in range(B+1):
                if(i==0 ):
                    dp[i][j]=False
                if(j==0):
                    dp[i][j]=True
                    
                elif(A[i-1]<=j):
                    dp[i][j]=dp[i-1][j-A[i-1]]  or dp[i-1][j]
                else:
                    dp[i][j]=dp[i-1][j]
        st=[]
        for i in range(B//2+1): #only taking s1 into account so min found out by range-2*i
            if(dp[n][i]==True):
                st.append(i)
        ans=1000000
        for i in range(len(st)):
            ans=min(ans, (B-2*st[i]))
        return ans
