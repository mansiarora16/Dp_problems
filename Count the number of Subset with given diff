Count sub-sets that satisfy the given condition

Given an array A[] and an diff x, the task is to count the number of sub-sets of arr[] such that diff between s1 and s2 is equall to given diff.
arr=[1,1,2,3]
diff=1


sum(s(1)) + sum(s(2))= sum(A)
sum(s(1)) - sum(s(2))= diff 

by these two equs , we get sum(s(1))= diff+ sum(A)/2

this problem is not subset sum problem with given sum= s1 where A= given array
w=(diff+sum(arr))/2

def solve(self, A,w):
        
        n=len(A)
        dp = [[False for x in range(w+1)] for y in range(n+1)] #create a 2d  matrirx
        for i in range(n+1):
            for j in range(w+1):
                if(i==0 ):
                    dp[i][j]=False
                if(j==0):
                    dp[i][j]=True
                    
                elif(A[i-1]<=j):
                    dp[i][j]=dp[i-1][j-A[i-1]]  or dp[i-1][j]
                else:
                    dp[i][j]=dp[i-1][j]
                    
                    
           return dp[n][w]
       
